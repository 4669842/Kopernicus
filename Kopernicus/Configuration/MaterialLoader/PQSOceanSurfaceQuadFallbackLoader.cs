// Material wrapper generated by shader translator tool
using System;
using System.Reflection;
using UnityEngine;

using Kopernicus.MaterialWrapper;

namespace Kopernicus
{
    namespace Configuration
    {
        public class PQSOceanSurfaceQuadFallbackLoader : PQSOceanSurfaceQuadFallback
        {
            // Main Color, default = (1,1,1,1)
            [ParserTarget("color", optional = true)]
            private ColorParser colorSetter
            {
                set { base.color = value.value; }
            }

            // Color From Space, default = (1,1,1,1)
            [ParserTarget("colorFromSpace", optional = true)]
            private ColorParser colorFromSpaceSetter
            {
                set { base.colorFromSpace = value.value; }
            }

            // Specular Color, default = (1,1,1,1)
            [ParserTarget("specColor", optional = true)]
            private ColorParser specColorSetter
            {
                set { base.specColor = value.value; }
            }

            // Shininess, default = 0.078125
            [ParserTarget("shininess", optional = true)]
            private NumericParser<float> shininessSetter
            {
                set { base.shininess = value.value; }
            }

            // Gloss, default = 0.078125
            [ParserTarget("gloss", optional = true)]
            private NumericParser<float> glossSetter
            {
                set { base.gloss = value.value; }
            }

            // Tex Tiling, default = 1
            [ParserTarget("tiling", optional = true)]
            private NumericParser<float> tilingSetter
            {
                set { base.tiling = value.value; }
            }

            // Tex0, default = "white" {}
            [ParserTarget("waterTex", optional = true)]
            private Texture2DParser waterTexSetter
            {
                set { base.waterTex = value.value; }
            }

            [ParserTarget("waterTexScale", optional = true)]
            private Vector2Parser waterTexScaleSetter
            {
                set { base.waterTexScale = value.value; }
            }

            [ParserTarget("waterTexOffset", optional = true)]
            private Vector2Parser waterTexOffsetSetter
            {
                set { base.waterTexOffset = value.value; }
            }

            // Tex1, default = "white" {}
            [ParserTarget("waterTex1", optional = true)]
            private Texture2DParser waterTex1Setter
            {
                set { base.waterTex1 = value.value; }
            }

            [ParserTarget("waterTex1Scale", optional = true)]
            private Vector2Parser waterTex1ScaleSetter
            {
                set { base.waterTex1Scale = value.value; }
            }

            [ParserTarget("waterTex1Offset", optional = true)]
            private Vector2Parser waterTex1OffsetSetter
            {
                set { base.waterTex1Offset = value.value; }
            }

            // FadeStart, default = 1
            [ParserTarget("fadeStart", optional = true)]
            private NumericParser<float> fadeStartSetter
            {
                set { base.fadeStart = value.value; }
            }

            // FadeEnd, default = 1
            [ParserTarget("fadeEnd", optional = true)]
            private NumericParser<float> fadeEndSetter
            {
                set { base.fadeEnd = value.value; }
            }

            // PlanetOpacity, default = 1
            [ParserTarget("planetOpacity", optional = true)]
            private NumericParser<float> planetOpacitySetter
            {
                set { base.planetOpacity = value.value; }
            }

            // Constructors
            public PQSOceanSurfaceQuadFallbackLoader () : base() { }
            public PQSOceanSurfaceQuadFallbackLoader (string contents) : base (contents) { }
            public PQSOceanSurfaceQuadFallbackLoader (Material material) : base(material) { }
        }
    }
}
