// Material wrapper generated by shader translator tool
using System;
using System.Reflection;
using UnityEngine;

namespace Kopernicus
{
    namespace MaterialWrapper
    {
        public class PQSOceanSurfaceQuadFallback : Material
        {
            // Return the shader for this wrapper
            private const string shaderName = "Terrain/PQS/Ocean Surface Quad (Fallback)";
            private static Shader shaderForMaterial
            {
                get { return Shader.Find (shaderName); }
            }

            // Color From Space, default = (1,1,1,1)
            private const string colorFromSpaceKey = "_ColorFromSpace";
            public Color colorFromSpace
            {
                get { return GetColor (colorFromSpaceKey); }
                set { SetColor (colorFromSpaceKey, value); }
            }

            // Specular Color, default = (1,1,1,1)
            private const string specColorKey = "_SpecColor";
            public Color specColor
            {
                get { return GetColor (specColorKey); }
                set { SetColor (specColorKey, value); }
            }

            // Shininess, default = 0.078125
            private const string shininessKey = "_Shininess";
            public float shininess
            {
                get { return GetFloat (shininessKey); }
                set { SetFloat (shininessKey, Mathf.Clamp(value,0.01f,1f)); }
            }

            // Gloss, default = 0.078125
            private const string glossKey = "_Gloss";
            public float gloss
            {
                get { return GetFloat (glossKey); }
                set { SetFloat (glossKey, Mathf.Clamp(value,0.01f,1f)); }
            }

            // Tex Tiling, default = 1
            private const string tilingKey = "_tiling";
            public float tiling
            {
                get { return GetFloat (tilingKey); }
                set { SetFloat (tilingKey, value); }
            }

            // Tex0, default = "white" {}
            private const string waterTexKey = "_WaterTex";
            public Texture2D waterTex
            {
                get { return GetTexture (waterTexKey) as Texture2D; }
                set { SetTexture (waterTexKey, value); }
            }

            // Tex1, default = "white" {}
            private const string waterTex1Key = "_WaterTex1";
            public Texture2D waterTex1
            {
                get { return GetTexture (waterTex1Key) as Texture2D; }
                set { SetTexture (waterTex1Key, value); }
            }

            // FadeStart, default = 1
            private const string fadeStartKey = "_fadeStart";
            public float fadeStart
            {
                get { return GetFloat (fadeStartKey); }
                set { SetFloat (fadeStartKey, value); }
            }

            // FadeEnd, default = 1
            private const string fadeEndKey = "_fadeEnd";
            public float fadeEnd
            {
                get { return GetFloat (fadeEndKey); }
                set { SetFloat (fadeEndKey, value); }
            }

            // PlanetOpacity, default = 1
            private const string planetOpacityKey = "_PlanetOpacity";
            public float planetOpacity
            {
                get { return GetFloat (planetOpacityKey); }
                set { SetFloat (planetOpacityKey, value); }
            }

            public PQSOceanSurfaceQuadFallback() : base(shaderForMaterial)
            {
            }

            public PQSOceanSurfaceQuadFallback(string contents) : base(contents)
            {
                base.shader = shaderForMaterial;
            }

            public PQSOceanSurfaceQuadFallback(Material material) : base(material)
            {
                // Throw exception if this material was not the proper material
                if (material.shader.name != shaderName)
                    throw new InvalidOperationException("PQSOceanSurfaceQuadFallback material requires the \"" + shaderName + "\" shader");
            }

        }
    }
}
