{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf190
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww17600\viewh17800\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 Modification of the MaterialWrapperGenerator Tool\
\
Create a singleton class (\'91Properties\'92) to contain the keys of the shader.  The constructor of this singleton stores the property IDs of the shader\'92s parameters\
\
\
protected class Properties \
\{\
    private const string propertyNameKey = \'93\'94;\
    public int propertyNameID \{ get; private set; \}\
\
    private const string shaderName = \'93Path/To/Shader\'94;\
    public Shader shader\
    \{\
        get \{ return Shader.Find(shaderName); \}\
    \}\
    public Properties()\
    \{\
        propertyNameId = Properties.shader.GetPropertyID(propertyNameKey);\
    \}\
\
    private static Properties singleton = null;\
    public static Properties Instance\
    \{\
        get\
        \{\
            if(singleton == null) singleton = new Properties();\
            return singleton;\
        \}\
    \}\
\}\
\
\
\
\
    }