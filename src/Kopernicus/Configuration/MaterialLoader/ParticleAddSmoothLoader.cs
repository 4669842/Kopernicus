// Material wrapper generated by shader translator tool
using System;
using Kopernicus.MaterialWrapper;
using UnityEngine;

namespace Kopernicus
{
    namespace Configuration
    {
        [RequireConfigType(ConfigType.Node)]
        public class ParticleAddSmoothLoader : ParticleAddSmooth
        {
            // Particle Texture, default = "white" { }
            [ParserTarget("texture")]
            public Texture2DParser mainTexSetter
            {
                get { return mainTex; }
                set { mainTex = value; }
            }

            [ParserTarget("mainTexScale")]
            private Vector2Parser mainTexScaleSetter
            {
                get { return mainTexScale; }
                set { mainTexScale = value; }
            }

            [ParserTarget("mainTexOffset")]
            private Vector2Parser mainTexOffsetSetter
            {
                get { return mainTexOffset; }
                set { mainTexOffset = value; }
            }

            // Soft Particles Factor, default = 1
            [ParserTarget("invFade")]
            public NumericParser<Single> invFadeSetter
            {
                get { return invFade; }
                set { invFade = value; }
            }

            // Constructors
            public ParticleAddSmoothLoader () : base() { }
            [Obsolete("Creating materials from shader source String is no longer supported. Use Shader assets instead.")]
            public ParticleAddSmoothLoader (String contents) : base (contents) { }
            public ParticleAddSmoothLoader (Material material) : base(material) { }
        }
    }
}
